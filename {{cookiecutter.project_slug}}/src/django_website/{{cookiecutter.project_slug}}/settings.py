"""
Django settings for {{ cookiecutter.project_name }} project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import environ
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    # Set casting, default value
    DEBUG=(bool, False),
    ENVIRONMENT=(str, "development"),
    SECRET_KEY=(str, "development-only-key-5k720%#=9vj#+b7+ou4)_vq13cl@9&"),

    DATABASE_ENGINE=(str, "django.db.backends.sqlite3"),
    DATABASE_NAME=(str, BASE_DIR / 'db.sqlite3'),
    DATABASE_USER=(str, "Not Used"),
    DATABASE_PASSWORD=(str, "Not Used"),
    DATABASE_HOST=(str, "Not Used"),
    DATABASE_PORT=(str, "5432"),

    EMAIL_HOST=(str, "developer-email-host"),
    EMAIL_PORT=(str, "developer-email-port"),
    EMAIL_HOST_USER=(str, "developer-email-user"),
    EMAIL_HOST_PASSWORD=(str, "developer-email-host-password"),
)
# reading .env file
environ.Env.read_env()


#################################
## Security Sensitive Settings ##
#################################
DEBUG = env('DEBUG')  # False if not in os.environ
SECRET_KEY = env("SECRET_KEY")
ENVIRONMENT = env('ENVIRONMENT')

if ENVIRONMENT in ["production"]:
    ALLOWED_HOSTS = []
    ADMINS = [('{{ cookiecutter.author_name }}', '{{ cookiecutter.email }}'), ]




##################################
## Prouduction Specific Settigns #
##################################

if ENVIRONMENT in ["production"]:
    pass



##########################
## Django Configuration ##
##########################

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'bootstrap4',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = '{{ cookiecutter.project_slug }}.urls'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / '{{ cookiecutter.project_slug }}' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATICFILES_DIRS = [
    BASE_DIR / "{{ cookiecutter.project_slug }}" / "static/",
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static_root'

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder'
]

############################
## Database Configuration ##
############################

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': env('DATABASE_ENGINE'),
        'NAME': env('DATABASE_NAME'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASSWORD'),
        'HOST': env('DATABASE_HOST'),
        'PORT': env('DATABASE_PORT')
    }
}

############
## Logging #
############

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console',],
            'level': 'INFO',
        },
    },
}


########################
## Internationalization
########################
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = '{{ cookiecutter.timezone }}'
USE_I18N = True
USE_L10N = True
USE_TZ = True

##########################
## Web Server Interface ##
##########################

WSGI_APPLICATION = '{{ cookiecutter.project_slug }}.wsgi.application'

#########################
## Email Configuration ##
#########################

# Email configuration
SERVER_EMAIL="email@emample.com"
EMAIL_USE_TLS = True
EMAIL_HOST=env("EMAIL_HOST")
EMAIL_PORT=env("EMAIL_PORT")
EMAIL_HOST_USER=env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD=env("EMAIL_HOST_PASSWORD")

if not ENVIRONMENT in ["production"]:
    ADMINS = [('Not Actually Sent', 'root@localhost')]
    EMAIL_FILE_PATH = BASE_DIR
    EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'

